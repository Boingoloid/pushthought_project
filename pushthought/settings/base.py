"""
Django settings for pushthought project.
Generated by 'django-admin startproject' using Django 1.8.4.
For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import psycopg2
import urlparse

PROJECT_FOLDER = os.path.realpath(os.path.dirname(__file__))
BASE_DIR = os.path.join(os.path.dirname(__file__), '..')
TEMPLATE_PATH = os.path.join(BASE_DIR, 'templates')

TEMPLATE_DIRS = (
    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    TEMPLATE_PATH,
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': TEMPLATE_DIRS
            # insert your TEMPLATE_DIRS here
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # Insert your TEMPLATE_CONTEXT_PROCESSORS here or use this
                # list if you haven't customized them:
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


SITE_ID = 1

REGISTRATION_OPEN = True    # If True, users can register
ACCOUNT_ACTIVATION_DAYS = 7     # One-week activation window; you may, of course, use a different value.
REGISTRATION_AUTO_LOGIN = True  # If True, the user will be automatically logged in.
LOGIN_REDIRECT_URL = '/pushthought/'  # The page you want users to arrive at after they successful log in
LOGIN_URL = '/accounts/login/'  # The page users are directed to if they are not logged in,
                                                                # and are trying to access pages requiring authentication
LOCAL_SERVER = 'http://127.0.0.1:8000/'
PUSH_THOUGHT_URL = 'www.pushthought.com/'
CURRENT_SERVER = PUSH_THOUGHT_URL

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'pushthought',
    'corsheaders',
    'rest_framework',
    'snippets',
    'prime',
)


MIDDLEWARE_CLASSES = (
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
)


ROOT_URLCONF = 'pushthought.urls'

DJANGO_SETTINGS_MODULE = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': TEMPLATE_DIRS,
        'APP_DIRS': True,
        'OPTIONS': {'debug':DEBUG,
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pushthought.wsgi.application'


CORS_ORIGIN_WHITELIST = (
    'pushthought.com',
    'localhost:8000',
    '127.0.0.1:8000'
)

# CORS_ORIGIN_REGEX_WHITELIST = (r'^(https?://)?(\w+\.)?google\.com$', )



# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases


SESSION_ENGINE = "django.contrib.sessions.backends.signed_cookies"



EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Los_Angeles'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Honor the 'X-Forwarded-Proto' header for request.is_secure()
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Allowed host headers
# ALLOWED_HOSTS = ['*']
ALLOWED_HOSTS = ['localhost','127.0.0.1','.pushthought.com','.herokuapp.com']


STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

# STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

CONGRESS_DATA_UPDATE_TRIGGER = False

import os

TWITTER_CALLBACK_ROOT_URL = 'http://127.0.0.1:8000/verify_catch'

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = os.environ.get('SECRET_KEY'), '57464'
#
#
# # parse-server
# PARSE_APP_ID = os.environ.get('PARSE_APP_ID')
# PARSE_REST_KEY = os.environ.get('PARSE_REST_KEY')
# PARSE_MASTER = os.environ.get('PARSE_MASTER')
# PARSE_KEY = os.environ.get('PARSE_KEY')
# PARSE_SECRET = os.environ.get('PARSE_SECRET')
# PARSE_SERVER_URL = os.environ.get('PARSE_SERVER_URL')
#
# # PARSE_SERVER_URL = 'https://ptparse.herokuapp.com/parse'
# # app level twitter settings
# TWITTER_CONSUMER_KEY = os.environ.get('TWITTER_CONSUMER_KEY')
# TWITTER_CONSUMER_SECRET = os.environ.get('TWITTER_CONSUMER_SECRET')
# # user level twitter settings
# TWITTER_ACCESS_TOKEN = os.environ.get('TWITTER_ACCESS_TOKEN')
# TWITTER_ACCESS_TOKEN_SECRET = os.environ.get('TWITTER_ACCESS_TOKEN_SECRET')
#
# # TWITTER_CALLBACK_ROOT_URL = 'http://www.pushthought.com/verify_catch'
#
# # sunlight labs api key
# SUNLIGHT_LABS_API_KEY = os.environ.get('SUNLIGHT_LABS_API_KEY')
#
# # database
# MONGO_DBNAME = os.environ.get('MONGO_DBNAME')
# MONGODB_URI = os.environ.get('MONGODB_URI')

# SECURITY WARNING: keep the secret key used in production secret!

# from settings import settings_prod
# HORSE = settings_prod.HORSE
# print "printing horse: ", HORSE


# SECURITY WARNING: keep the secret key used in production secret!